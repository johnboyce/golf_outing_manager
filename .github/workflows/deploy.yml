name: Deploy Infrastructure

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Validate AWS Credentials
      - name: Validate AWS Credentials
        run: aws sts get-caller-identity
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-east-1"

      # Step 3: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Step 4: Initialize Terraform
      - name: Initialize Terraform
        run: terraform init
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-east-1"

      # Step 5: Apply Terraform Changes
      - name: Apply Terraform Changes
        run: terraform apply -auto-approve
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-east-1"

      # Step 6: Retrieve CloudFront Distribution ID and Invalidate Cache (Fails Gracefully)
      - name: Retrieve CloudFront Distribution ID and Invalidate Cache
        run: |
          echo "Retrieving CloudFront Distribution ID..."
          CLOUDFRONT_ID=$(terraform output -raw cloudfront_distribution_id 2>/dev/null)
          if [ -z "$CLOUDFRONT_ID" ]; then
            echo "Warning: Could not retrieve a valid CloudFront Distribution ID."
            exit 0
          fi
          echo "CloudFront Distribution ID: $CLOUDFRONT_ID"
          echo "Invalidating CloudFront Cache..."
          aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths "/*"
        working-directory: terraform
        continue-on-error: true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-east-1"

      # Step 7: Final Deployment Status
      - name: Deployment Complete
        run: |
          echo "Deployment finished successfully."
          if [[ -n "$CLOUDFRONT_ID" ]]; then
            echo "Cache invalidation attempted for CloudFront Distribution ID: $CLOUDFRONT_ID"
          else
            echo "Cache invalidation skipped."
          fi
