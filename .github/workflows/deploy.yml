name: Deploy Lambda and Infrastructure

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      S3_BUCKET: golf-outing-lambda-deployments
      LAMBDA_NAME: GolfOutingHandler
      LAMBDA_RUNTIME: nodejs18.x
      LAMBDA_HANDLER: index.handler
      REGION: us-east-1
      ROLE_ARN: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/golf_outing_lambda_role
      DYNAMODB_TABLE: GolfOutingTable

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Package Lambda
        run: |
          cd lambda
          zip -r ../lambda.zip .
          echo "Lambda package created successfully."
          ls -la ../lambda.zip

      - name: Upload Lambda to S3
        run: |
          aws s3 cp ./lambda.zip s3://$S3_BUCKET/lambda.zip

      - name: Deploy Lambda Function
        run: |
          aws lambda create-function \
            --function-name $LAMBDA_NAME \
            --runtime $LAMBDA_RUNTIME \
            --role $ROLE_ARN \
            --handler $LAMBDA_HANDLER \
            --code S3Bucket=$S3_BUCKET,S3Key=lambda.zip \
            --environment Variables="{DYNAMODB_TABLE=$DYNAMODB_TABLE}" \
            || aws lambda update-function-code \
            --function-name $LAMBDA_NAME \
            --s3-bucket $S3_BUCKET \
            --s3-key lambda.zip

      - name: Validate Deployment
        run: |
          echo "Validating deployment..."
          curl -I https://$(terraform output -raw cloudfront_distribution_id) || echo "Validation failed"
